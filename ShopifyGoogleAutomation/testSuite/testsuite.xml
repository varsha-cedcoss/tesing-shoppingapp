<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd" >
<suite name="TestSuite">
	<test name="Demo">
		<classes>
			<class name="TestScripts.ManageProducts">
				<!-- start sync with shopify -->
					<method name="verifyingSyncwithShopify"></method>
				<!-- end sync with shopify -->
				
				<!-- start with update price -->
				<method name="verifyingUpdatingPrice"></method>
				<!-- end with update price -->
				
				<!-- start with update inventory -->
				<method name="verifyingUpdatingInventory"></method>
				<!-- end with update inventory -->
				
				<!-- start with update status -->
				<method name="verifyingUpdateStatus"></method>
				<!-- end with update status -->
				
			</class>
			
			<class name="TestScripts.DashBoard">
			
			<!-- start with clicking all options -->
			<method name="clickingAllOptions"></method>
			<!-- end with cllicking all options -->
			
			<!-- start with clicking all links -->
			<method name="clickingAllLinks"></method>
			<!-- end with clicking all links -->
						
			</class>
			
			<class name="TestScripts.WebHook">
			
			<!-- start with creating a new product -->
			<method name="verifyingNewProductCreatedInWalmart"></method>
			<!-- end with creating a new product -->
			
			<!-- start with updating simple products attributes -->
			<method name="updatingSimpleProductAttributesandVerifyingInWalmart"></method>
			<!-- end with updating simple products attributes -->
			
			<!-- start with updating variant product attributes -->
			<method name="updatingParametersForVariantsandVerifyingInWalmart"></method>
			<!-- end with updating variant product attributes -->
			
			<!-- start with add variant for products having variant -->
			<method name="verifyingAddVariantForProductHavingVariants"></method>
			<!-- end with add variant for products having variant -->
			
			<!-- start with verifyingDuplicateSkuUpdate -->
			<method name="verifyingDuplicateSkuUpdate"></method>
			<!-- end with verifyingDuplicateSkuUpdate -->
			
			<!-- start with inventory policy and inventory management -->
			<method name="verifyingInventoryPolicyandInventoryManagement"></method>
			<!-- end with inventory policy and inventory management -->
			
			<!-- start with delete variant -->
			<method name="verifyingDeleteVariant"></method>
			<!-- end with delete variant -->
			
			<!-- start with delete product -->
			<method name="verifyingDeleteProduct"></method>
			<!-- end with delete product -->
			
			<!-- start with inventory policy and inventory management for variants -->
			<method name="verifyingInventoryPolicyandInventoryManagementForVariants"></method>
			<!-- end with inventory policy and inventory management for variants -->
			
			<!-- start with bulk inventory update -->
			<method name="verifyingBulkInventoryUpdate"></method>
			<!-- end with bulk inventory update -->
			
			<!-- start with creating product for existing product type -->
			<method name="verifyingCreateProductWithExistingProductType"></method>
			<!-- end with creating product for existing product type -->
			
			<!-- start with tags update -->
			<method name="verifyingTagsUpdateforSimpleProducts"></method>
			<!-- end with tags update -->
			
			<!-- start with update inventory after creating order -->
			<method name="VerifyingUpdateInventoryAfterCreatingOrder"></method>
			<!-- end with update inventory after creating order -->
			
			<!-- start with after Refund inventory stock is added back  -->
			<method name="verifyingAfterRefundInventoryStockisAddedBack"></method>
			<!-- end with after Refund inventory stock is added back  -->
			
			<!-- start with sync disable then not updating -->
			<method name="verifyingIfSyncDisableThenNotUpdating"></method>
			<!-- end with sync disable then not updating -->
			
			<!-- start with sync disable then variant is not updating -->
			<method name="verifyingIfSyncDisableThenVariantNotUpdating"></method>
			<!-- end with sync disable then variant is not updating -->
			
			
			<!-- start with no product created when auto product create is disabled -->
			<method name="verifyingNoProductCreatedWhenAutoProductCreateIsOff"></method>
			<!-- end with no product created when auto product create is disabled -->
			
			<!-- start with  sync disabled for an atttribute then not updating -->
			<method name="verifyingIfSyncDisabledForAParticularAttributeThenNotUpdating"></method>
			<!-- end with  sync disabled for an atttribute then not updating -->
			
			<!-- start with Import Limit reached -->
			<method name="verifyingWhenImportLimitReachedDelete1VariantAdd2VariantThen1VariantShouldBeAdded"></method>
			<!-- end with Import Limit reached -->
						
			</class>
			
			
			
			<class name="TestScripts.ImportExport">
			
			<!-- start with exporting csv and updating and again importing
			There are 2 parts in this method which you have todo sequence wise:
			1.first you have to export csv and update
			2.secondly you have to manually import updated csv file and run the script after commenting first part in the script
			 -->
			<method name="exportingCsvandUpdating"></method>
			<!-- end with exporting csv and updating and again importing -->
			
			</class>
			
			
			<class name="TestScripts.PricingPlan">
			
			<!-- start with pricing plan annually and monthly -->
			<method name="verifyingPricingPlanAnnuallyAndMonthly"></method>
			<!-- end with pricing plan annually and monthly -->
			
			</class>
			
			<class name="TestScripts.SalesOrder">
			
			<!-- start with updating order status through the link given on top of the page -->
			<method name="updatingOrderStatusThroughLink"></method>
			<!-- end with updating order status through the link given on top of the page -->
			
			<!-- start with fetching orders -->
			<method name="fetchingOrders"></method>
			<!-- end with fetching orders -->
			
			<!-- start with syncing shipment -->
			<method name="syncShipment"></method>
			<!-- end with syncing shipment -->
			
			</class>
			
			<class name="TestScripts.FailedOrders">
			
			<!-- start with updating order status -->
			<method name="updatingOrderStatus"></method>
			<!-- end with updating order status -->
			
			</class>
			
		</classes>
	</test>
</suite>
	